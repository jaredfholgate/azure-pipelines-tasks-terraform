jobs:
- job: terraform_extension
  variables:
    GitVersion.SemVer: $[stageDependencies.pre_build.version.outputs['version.GitVersion.SemVer']]
    ext_versions: self, zero
  steps:
    - ${{ each ex_version in split(variables.ext_versions, ', ') }}:
      - script: |
          echo ${{ ex_version }}
          echo ${{ ex_version.key }}
          echo ${{ ex_version.value }}
        displayName: Test ex_version

      - task: DownloadPipelineArtifact@2
        displayName: download terraform installer
        inputs: 
          artifact: terraform_installer_${{ ex_version.value }}
          path: $(terraform_extension_dir)
      - task: DownloadPipelineArtifact@2
        displayName: download terraform cli
        inputs: 
          artifact: terraform_cli_${{ ex_version.value }}
          path: $(terraform_extension_dir)
      - task: DownloadPipelineArtifact@2
        displayName: download views terraform plan
        inputs: 
          artifact: views_terraform_plan_${{ ex_version.value }}
          path: $(terraform_extension_dir)
      - task: Npm@1
        displayName: version
        inputs:
          workingDir: $(terraform_extension_dir)
          command: custom
          customCommand: version $(GitVersion.SemVer) --no-git-tag-version --allow-same-version
      - task: Npm@1
        displayName: install  
        inputs:
          workingDir: $(terraform_extension_dir)
          command: ci

    - task: CopyFiles@2
      displayName: stage extension
      inputs:
        contents: |
          !node_modules/.bin/*
          screenshots/*
          overview.md
          package*.json
          vss-extension*.json
          vss-extension-icon.png
          **/*.sh
        targetFolder: $(build.artifactstagingdirectory)/terraform_extension
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/terraform_extension'
        artifactName: terraform_extension_${{ parameters.repo }}